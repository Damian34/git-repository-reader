volumes:
  kafka-data:
    driver: local
  api-temp:
    driver: local
  git-repository-db:
    driver: local

networks:
  api-network:
  kafka-network:

services:
  zookeeper:
    image: wurstmeister/zookeeper:latest
    container_name: zookeeper
    restart: always
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ALLOW_ANONYMOUS_LOGIN: "yes"
    ports:
      - "2181:2181"
    networks:
      - kafka-network
    deploy:
      resources:
        limits:
          memory: 512m
        reservations:
          memory: 256m
  kafka:
    image: wurstmeister/kafka:latest
    container_name: kafka
    restart: always
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,PLAINTEXT_HOST://0.0.0.0:29092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      ALLOW_PLAINTEXT_LISTENER: "yes"
    ports:
      - "9092:9092"
      - "29092:29092"
    depends_on:
      - zookeeper
    networks:
      - kafka-network
    healthcheck:
      test: [ "CMD", "kafka-topics", "--zookeeper", "zookeeper:2181", "--list" ]
      interval: 1m
      retries: 5
      start_period: 30s
      timeout: 20s
    deploy:
      resources:
        limits:
          memory: 512m
        reservations:
          memory: 256m
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    restart: always
    environment:
      KAFKA_CLUSTERS_0_NAME: "local"
      KAFKA_CLUSTERS_0_BOOTSTRAP_SERVERS: "kafka:9092"
      KAFKA_CLUSTERS_0_ZOOKEEPER: "zookeeper:2181"
    ports:
      - "8090:8080"
    networks:
      - kafka-network
    deploy:
      resources:
        limits:
          memory: 512m
        reservations:
          memory: 256m
  mongo-db:
    image: "mongo:latest"
    container_name: mongo-db
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: "${MONGO_ROOT_USERNAME}"
      MONGO_INITDB_ROOT_PASSWORD: "${MONGO_ROOT_PASSWORD}"
      MONGO_INITDB_DATABASE: "${MONGO_DB_NAME}"
    ports:
      - "27017:27017"
    volumes:
      - git-repository-db:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js
    networks:
      - api-network
    deploy:
      resources:
        limits:
          memory: 512m
        reservations:
          memory: 256m
  git-repository-reader-engine:
    build: ./git-repository-reader-engine
    restart: always
    depends_on:
      - mongo-db
    ports:
      - "8081:8080"
    environment:
      MONGO_URL: ${MONGO_URL}
      KAFKA_URL: ${KAFKA_URL}
      KAFKA_GROUP_ID: ${KAFKA_GROUP_ID}
      TEMP_ROOT_FOLDER: ${TEMP_ROOT_FOLDER}
    volumes:
      - api-temp:/tmp/${TEMP_ROOT_FOLDER}
    networks:
      - api-network
    deploy:
      resources:
        limits:
          memory: 1g
        reservations:
          memory: 512m